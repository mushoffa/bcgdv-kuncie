syntax="proto3";
//package pb;

option go_package = "github.com/mushoffa/bcgdv-kuncie/protos";

import "google/protobuf/empty.proto";

// @Created 12/10/2021
// @Updated 25/10/2021
message Product { 
	string id = 1;
	string created = 2;
	string updated = 3;
	string sku = 4;
	string name = 5;
	double price = 6;
	uint32 qty = 7;
}

// @Created 17/10/2021
// @Updated 25/10/2021
message CreateProductRequest {
	string sku = 2;
	string name = 3;
	double price = 4;
	uint32 qty = 5;
}

// @Created 25/10/2021
message CreateProductResponse {
	Product product = 1 ;
}

// @Created 12/10/2021
message GetProductBySKURequest {
	string sku = 1;
}

// @Created 12/10/2021
message GetProductResponse {
	Product product = 1;
}

// @Created 12/10/2021
message GetAllProductsResponse {
	repeated Product products = 1;
}

// @Created 17/10/2021
message AddProductQuantityRequest {
	string sku = 1;
	uint32 qty = 2;
}

// @Created 17/10/2021
message AddProductQuantityResponse {
	Product product = 1;
}

// @Created 25/10/2021
message UpdateProductPriceRequest {
	string id = 1;
	string sku = 2;
	double price = 3;
}

// @Created 25/10/2021
message UpdateProductPriceResponse {
	Product product = 1 ;
}

// @Created 17/10/2021
message CheckoutProductRequest {
	string sku = 1;
	uint32 qty = 2;
}

// @Created 17/10/2021
message CheckoutProductResponse {
	Product product = 1;
}

// @Created 25/10/2021
message ReturnProductRequest {
	string sku = 1;
	uint32 qty = 2;
}

// @Created 25/10/2021
message ReturnProductResponse {
	Product product = 1;
}

// @Created 12/10/2021
// @Updated 24/10/2021
service CatalogService {
	rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);	
	rpc GetProductBySKU(GetProductBySKURequest) returns (GetProductResponse);
	rpc GetAllProducts(google.protobuf.Empty) returns (GetAllProductsResponse);
	rpc AddProductQuantity(AddProductQuantityRequest) returns (AddProductQuantityResponse);
	rpc UpdateProductPrice(UpdateProductPriceRequest) returns (UpdateProductPriceResponse);
	rpc CheckoutProduct(CheckoutProductRequest) returns (CheckoutProductResponse);
	rpc ReturnProduct(ReturnProductRequest) returns (ReturnProductResponse);
}